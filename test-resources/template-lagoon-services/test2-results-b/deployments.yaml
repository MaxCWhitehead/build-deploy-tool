---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: cli
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: cli-persistent
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: cli
    lagoon.sh/service-type: cli-persistent
    lagoon.sh/template: cli-persistent-0.1.0
  name: cli
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: cli
      app.kubernetes.io/name: cli-persistent
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: cli
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: cli-persistent
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: cli
        lagoon.sh/service-type: cli-persistent
        lagoon.sh/template: cli-persistent-0.1.0
    spec:
      containers:
      - env:
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
          value: |
            5,20,35,50 * * * * drush cron
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/cli:latest
        name: cli
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - if [ -x /bin/entrypoint-readiness ]; then /bin/entrypoint-readiness;
              fi
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 2
        resources:
          requests:
            cpu: 10m
            memory: 100M
        volumeMounts:
        - mountPath: /var/run/secrets/lagoon/sshkey/
          name: lagoon-sshkey
          readOnly: true
        - mountPath: /app/docroot/sites/default/files//php
          name: nginx-php-twig
        - mountPath: /app/docroot/sites/default/files/
          name: nginx-php
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
      volumes:
      - name: lagoon-sshkey
        secret:
          defaultMode: 420
          secretName: lagoon-sshkey
      - emptyDir: {}
        name: nginx-php-twig
      - name: nginx-php
        persistentVolumeClaim:
          claimName: nginx-php
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: redis
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: redis
    lagoon.sh/service-type: redis
    lagoon.sh/template: redis-0.1.0
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redis
      app.kubernetes.io/name: redis
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redis
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: redis
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: redis
        lagoon.sh/service-type: redis
        lagoon.sh/template: redis-0.1.0
    spec:
      containers:
      - env:
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/redis:latest
        livenessProbe:
          initialDelaySeconds: 120
          tcpSocket:
            port: 6379
          timeoutSeconds: 10
        name: redis
        ports:
        - containerPort: 6379
          name: 6379-tcp
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 100M
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: varnish
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: varnish
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: varnish
    lagoon.sh/service-type: varnish
    lagoon.sh/template: varnish-0.1.0
  name: varnish
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: varnish
      app.kubernetes.io/name: varnish
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: varnish
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: varnish
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: varnish
        lagoon.sh/service-type: varnish
        lagoon.sh/template: varnish-0.1.0
    spec:
      containers:
      - env:
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/varnish:latest
        livenessProbe:
          initialDelaySeconds: 60
          tcpSocket:
            port: 8080
          timeoutSeconds: 10
        name: varnish
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 6082
          name: controlport
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 100M
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: nginx-php
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: nginx-php-persistent
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: nginx-php
    lagoon.sh/service-type: nginx-php-persistent
    lagoon.sh/template: nginx-php-persistent-0.1.0
  name: nginx-php
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx-php
      app.kubernetes.io/name: nginx-php-persistent
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: nginx-php
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: nginx-php-persistent
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: nginx-php
        lagoon.sh/service-type: nginx-php-persistent
        lagoon.sh/template: nginx-php-persistent-0.1.0
    spec:
      containers:
      - env:
        - name: NGINX_FASTCGI_PASS
          value: 127.0.0.1
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/nginx:latest
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /nginx_status
            port: 50000
          initialDelaySeconds: 900
          timeoutSeconds: 3
        name: nginx
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /nginx_status
            port: 50000
          initialDelaySeconds: 1
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 10m
            memory: 10M
        volumeMounts:
        - mountPath: /app/docroot/sites/default/files/
          name: nginx-php
      - env:
        - name: NGINX_FASTCGI_PASS
          value: 127.0.0.1
        - name: LAGOON_GIT_SHA
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/php:latest
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          tcpSocket:
            port: 9000
        name: php
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 2
          periodSeconds: 10
          tcpSocket:
            port: 9000
        resources:
          requests:
            cpu: 10m
            memory: 100M
        volumeMounts:
        - mountPath: /app/docroot/sites/default/files/
          name: nginx-php
        - mountPath: /app/docroot/sites/default/files//php
          name: nginx-php-twig
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      initContainers:
      - command:
        - sh
        - -c
        - "set -e\nSENTINEL=\"/storage/.lagoon-rootless-migration-complete\"\nif !
          [ -f \"$SENTINEL\" ]; then\n\tfind /storage -exec chown 10000:0 {} +\n\tfind
          /storage -exec chmod a+r,u+w {} +\n\tfind /storage -type d -exec chmod a+x
          {} +\n\ttouch \"$SENTINEL\"\nfi"
        image: library/busybox:musl
        imagePullPolicy: IfNotPresent
        name: fix-storage-permissions
        resources: {}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /storage
          name: nginx-php
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
      volumes:
      - name: nginx-php
        persistentVolumeClaim:
          claimName: nginx-php
      - emptyDir: {}
        name: nginx-php-twig
status: {}
