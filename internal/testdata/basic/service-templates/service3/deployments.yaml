---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: lnd
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: basic-persistent
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: lnd
    lagoon.sh/service-type: basic-persistent
    lagoon.sh/template: basic-persistent-0.1.0
  name: lnd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: lnd
      app.kubernetes.io/name: basic-persistent
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: lnd
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: basic-persistent
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: lnd
        lagoon.sh/service-type: basic-persistent
        lagoon.sh/template: basic-persistent-0.1.0
    spec:
      containers:
      - env:
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/lnd:latest
        livenessProbe:
          initialDelaySeconds: 60
          tcpSocket:
            port: 8080
          timeoutSeconds: 10
        name: basic
        ports:
        - containerPort: 8080
          name: tcp-8080
          protocol: TCP
        - containerPort: 10009
          name: tcp-10009
          protocol: TCP
        readinessProbe:
          initialDelaySeconds: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 100M
        volumeMounts:
        - mountPath: /app/storage
          name: lnd
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
      volumes:
      - name: lnd
        persistentVolumeClaim:
          claimName: lnd
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lagoon.sh/branch: main
    lagoon.sh/version: v2.7.x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: tor
    app.kubernetes.io/managed-by: build-deploy-tool
    app.kubernetes.io/name: worker-persistent
    lagoon.sh/buildType: branch
    lagoon.sh/environment: main
    lagoon.sh/environmentType: production
    lagoon.sh/project: example-project
    lagoon.sh/service: tor
    lagoon.sh/service-type: worker-persistent
    lagoon.sh/template: worker-persistent-0.1.0
  name: tor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tor
      app.kubernetes.io/name: worker-persistent
  strategy: {}
  template:
    metadata:
      annotations:
        lagoon.sh/branch: main
        lagoon.sh/configMapSha: abcdefg1234567890
        lagoon.sh/version: v2.7.x
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: tor
        app.kubernetes.io/managed-by: build-deploy-tool
        app.kubernetes.io/name: worker-persistent
        lagoon.sh/buildType: branch
        lagoon.sh/environment: main
        lagoon.sh/environmentType: production
        lagoon.sh/project: example-project
        lagoon.sh/service: tor
        lagoon.sh/service-type: worker-persistent
        lagoon.sh/template: worker-persistent-0.1.0
    spec:
      containers:
      - env:
        - name: LAGOON_GIT_SHA
        - name: CRONJOBS
        envFrom:
        - configMapRef:
            name: lagoon-env
        image: harbor.example/example-project/main/tor:latest
        name: cli
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - if [ -x /bin/entrypoint-readiness ]; then /bin/entrypoint-readiness;
              fi
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 2
        resources:
          requests:
            cpu: 10m
            memory: 100M
        volumeMounts:
        - mountPath: /var/run/secrets/lagoon/sshkey/
          name: lagoon-sshkey
          readOnly: true
        - mountPath: /data
          name: lnd
      enableServiceLinks: false
      imagePullSecrets:
      - name: lagoon-internal-registry-secret
      priorityClassName: lagoon-priority-production
      securityContext:
        fsGroup: 10001
        runAsGroup: 0
        runAsUser: 10000
      volumes:
      - name: lnd
        persistentVolumeClaim:
          claimName: lnd
status: {}
