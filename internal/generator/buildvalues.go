package generator

import (
	composetypes "github.com/compose-spec/compose-go/types"
	"github.com/uselagoon/build-deploy-tool/internal/dbaasclient"
	"github.com/uselagoon/build-deploy-tool/internal/lagoon"
	corev1 "k8s.io/api/core/v1"
)

// BuildValues is the values file data generated by the lagoon build
type BuildValues struct {
	SourceRepository              string                       `json:"sourceRepository"`
	BuildName                     string                       `json:"buildName"`
	Project                       string                       `json:"project"`
	Environment                   string                       `json:"environment"`
	EnvironmentType               string                       `json:"environmentType"`
	Namespace                     string                       `json:"namespace"`
	GitSHA                        string                       `json:"gitSha"`
	BuildType                     string                       `json:"buildType"`
	Kubernetes                    string                       `json:"kubernetes"`
	LagoonVersion                 string                       `json:"lagoonVersion"`
	ActiveEnvironment             string                       `json:"activeEnvironment"`
	StandbyEnvironment            string                       `json:"standbyEnvironment"`
	IsActiveEnvironment           bool                         `json:"isActiveEnvironment"`
	IsStandbyEnvironment          bool                         `json:"isStandbyEnvironment"`
	PodSecurityContext            PodSecurityContext           `json:"podSecurityContext"`
	ImagePullSecrets              []ImagePullSecrets           `json:"imagePullSecrets"`
	Branch                        string                       `json:"branch"`
	PRNumber                      string                       `json:"prNumber"`
	PRTitle                       string                       `json:"prTitle"`
	PRHeadBranch                  string                       `json:"prHeadBranch"`
	PRBaseBranch                  string                       `json:"prBaseBranch"`
	PRHeadSHA                     string                       `json:"prHeadSHA"`
	PRBaseSHA                     string                       `json:"prBaseSHA"`
	PrivateRegistryURLS           []string                     `json:"privateRegistryURLS"`
	Fastly                        Fastly                       `json:"fastly"`
	FastlyCacheNoCache            string                       `json:"fastlyCacheNoCahce"`
	FastlyAPISecretPrefix         string                       `json:"fastlyAPISecretPrefix"`
	ConfigMapSha                  string                       `json:"configMapSha"`
	Route                         string                       `json:"route"`
	Routes                        []string                     `json:"routes"`
	AutogeneratedRoutes           []string                     `json:"autogeneratedRoutes"`
	RoutesAutogeneratePrefixes    []string                     `json:"routesAutogeneratePrefixes"`
	AutogeneratedRoutesFastly     bool                         `json:"autogeneratedRoutesFastly"`
	Services                      []ServiceValues              `json:"services"`
	Backup                        BackupConfiguration          `json:"backup"`
	Monitoring                    MonitoringConfig             `json:"monitoring"`
	DBaaSOperatorEndpoint         string                       `json:"dbaasOperatorEndpoint"`
	ServiceTypeOverrides          *lagoon.EnvironmentVariable  `json:"serviceTypeOverrides"`
	DBaaSEnvironmentTypeOverrides *lagoon.EnvironmentVariable  `json:"dbaasEnvironmentTypeOverrides"`
	DBaaSFallbackSingle           bool                         `json:"dbaasFallbackSingle"`
	IngressClass                  string                       `json:"ingressClass"`
	TaskScaleMaxIterations        int                          `json:"taskScaleMaxIterations"`
	TaskScaleWaitTime             int                          `json:"taskScaleWaitTime"`
	DynamicSecretMounts           []DynamicSecretMounts        `json:"dynamicSecretMounts"`
	DynamicSecretVolumes          []DynamicSecretVolumes       `json:"dynamicSecretVolumes"`
	ImageCache                    string                       `json:"imageCache"`
	DefaultBackupSchedule         string                       `json:"defaultBackupSchedule"`
	DBaaSClient                   *dbaasclient.Client          `json:"-"`
	ImageReferences               map[string]string            `json:"imageReferences"`
	Resources                     Resources                    `json:"resources"`
	CronjobsDisabled              bool                         `json:"cronjobsDisabled"`
	FeatureFlags                  map[string]bool              `json:"-"`
	ImageRegistry                 string                       `json:"imageRegistry"`
	DockerBuildKit                bool                         `json:"dockerBuildKit"`
	ImageBuildArguments           map[string]string            `json:"imageBuildArguments"`
	EnvironmentVariables          []lagoon.EnvironmentVariable `json:"environmentVariables"`
	LagoonYAML                    lagoon.YAML                  `json:"lagoonYAML"`
	PromotionSourceEnvironment    string                       `json:"promotionSourceEnvironment"`
}

type Resources struct {
	Limits   ResourceLimits   `json:"limits"`
	Requests ResourceRequests `json:"requests"`
}

type ResourceLimits struct {
	Memory           string `json:"memory"`
	EphemeralStorage string `json:"ephemeral-storage"`
}

type ResourceRequests struct {
	EphemeralStorage string `json:"ephemeral-storage"`
}

type PodSecurityContext struct {
	FsGroup        int64 `json:"fsGroup"`
	RunAsGroup     int64 `json:"runAsGroup"`
	RunAsUser      int64 `json:"runAsUser"`
	OnRootMismatch bool  `json:"onRootMismatch"`
}

type Fastly struct {
	ServiceID     string `json:"serviceId"`
	APISecretName string `json:"apiSecretName"`
	Watch         bool   `json:"watch"`
}

type MonitoringConfig struct {
	Enabled      bool   `json:"enabled"`
	AlertContact string `json:"alertContact"`
	StatusPageID string `json:"statusPageID"`
}

type ImagePullSecrets struct {
	Name string `json:"name"`
}

type DynamicSecretMounts struct {
	Name      string `json:"name"`
	MountPath string `json:"mountPath"`
	ReadOnly  bool   `json:"readOnly"`
}

type DynamicSecretVolumes struct {
	Name   string        `json:"name"`
	Secret DynamicSecret `json:"secret"`
}

type DynamicSecret struct {
	SecretName string `json:"secretName"`
	Optional   bool   `json:"optional"`
}

// ServiceValues is the values for a specific service used by a lagoon build
type ServiceValues struct {
	Name                          string                  `json:"name"`         // this is the actual compose service name
	OverrideName                  string                  `json:"overrideName"` // if an override name is provided, use it
	Type                          string                  `json:"type"`
	AutogeneratedRoutesEnabled    bool                    `json:"autogeneratedRoutesEnabled"`
	AutogeneratedRoutesTLSAcme    bool                    `json:"autogeneratedRoutesTLSAcme"`
	AutogeneratedRouteDomain      string                  `json:"autogeneratedRouteDomain"`
	ShortAutogeneratedRouteDomain string                  `json:"shortAutogeneratedRouteDomain"`
	DBaaSEnvironment              string                  `json:"dbaasEnvironment"`
	NativeCronjobs                []lagoon.Cronjob        `json:"nativeCronjobs"`
	InPodCronjobs                 []lagoon.Cronjob        `json:"inPodCronjobs"`
	DeploymentServiceType         string                  `json:"deploymentServiceType"`
	ServicePort                   int32                   `json:"servicePort,omitempty"`
	PersistentVolumePath          string                  `json:"persistentVolumePath,omitempty"`
	PersistentVolumeName          string                  `json:"persistentVolumeName,omitempty"`
	PersistentVolumeSize          string                  `json:"persistentVolumeSize,omitempty"`
	UseSpotInstances              bool                    `json:"useSpot"`
	ForceSpotInstances            bool                    `json:"forceUseSpot"`
	CronjobUseSpotInstances       bool                    `json:"cronjobUseSpot"`
	CronjobForceSpotInstances     bool                    `json:"cronjobForceUseSpot"`
	Replicas                      int32                   `json:"replicas"`
	LinkedService                 *ServiceValues          `json:"linkedService"`
	PodSecurityContext            PodSecurityContext      `json:"podSecurityContext"`
	AdditionalServicePorts        []AdditionalServicePort `json:"additionalServicePorts,omitempty"`
	NodeSelectors                 *map[string]string      `json:"nodeSelectors"`
	Tolerations                   *[]corev1.Toleration    `json:"tolerations"`
	Affinity                      *corev1.Affinity        `json:"affinity"`
	CronjobNodeSelectors          *map[string]string      `json:"cronjobNodeSelectors"`
	CronjobTolerations            *[]corev1.Toleration    `json:"cronjobTolerations"`
	CronjobAffinity               *corev1.Affinity        `json:"cronjobAffinity"`
	DBaasReadReplica              bool                    `json:"dBaasReadReplica"`
	ImageBuild                    *ImageBuild             `json:"docker,omitempty"`
}

type ImageBuild struct {
	DockerFile     string `json:"dockerFile,omitempty"`
	Target         string `json:"target,omitempty"`
	Context        string `json:"context,omitempty"`
	PullImage      string `json:"pullImage,omitempty"`
	PromoteImage   string `json:"promoteImage,omitempty"`
	BuildImage     string `json:"buildImage,omitempty"`
	TemporaryImage string `json:"temporaryImage,omitempty"`
}

type AdditionalServicePort struct {
	ServicePort composetypes.ServicePortConfig `json:"servicePort,omitempty"`
	ServiceName string                         `json:"serviceName,omitempty"`
	Index       int                            `json:"-"`
}

// CronjobValues is the values for cronjobs
type CronjobValues struct {
	Schedule string `json:"schedule"`
	Command  string `json:"command"`
}

type BackupConfiguration struct {
	K8upVersion    string                      `json:"k8upVersion"`
	PruneRetention PruneRetention              `json:"pruneRetention"`
	PruneSchedule  string                      `json:"pruneSchedule"`
	CheckSchedule  string                      `json:"checkSchedule"`
	BackupSchedule string                      `json:"backupSchedule"`
	S3Endpoint     string                      `json:"s3Endpoint"`
	S3BucketName   string                      `json:"s3BucketName"`
	S3SecretName   string                      `json:"s3SecretName"`
	CustomLocation CustomBackupRestoreLocation `json:"customLocation"`
}

type CustomBackupRestoreLocation struct {
	BackupLocationAccessKey  string `json:"backupLocationAccessKey"`
	BackupLocationSecretKey  string `json:"backupLocationSecretKey"`
	RestoreLocationAccessKey string `json:"restoreLocationAccessKey"`
	RestoreLocationSecretKey string `json:"restoreLocationSecretKey"`
}

type PruneRetention struct {
	Hourly  int `json:"hourly"`
	Daily   int `json:"daily"`
	Weekly  int `json:"weekly"`
	Monthly int `json:"monthly"`
}
